/*
*
* Procedure: Proposed Space/Time Complexity: O(1)/O(log n)
*
* Implement a binary search that compares the middle element with middle index.
* If they are the same then then return the index.
* If index is smaller than middle element then check
*
*/

function indexEqualsValueSearch(arr) {
  // your code goes here
  
  if(arr === null || typeof arr === 'undefined') {
    return -1;
  } else {
    
    let start = 0;
    let end = arr.length;
    let lowest = -1;

    while(start < end){
        let middle = start + Math.round((end - start) / 2) - 1;

        if(arr[middle] === middle) {
            lowest = middle;
            end = middle - 1;
        } else if(middle < arr[middle]) {
            end = middle - 1;
        } else if(middle > arr[middle]) {
            start = middle + 1;
        }
    }

    return lowest;
  }
}